import java.awt.Button;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Label;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JCheckBox;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Color;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Admin
 */
public class Client_Login extends javax.swing.JFrame {
	public String nom;
	public String ip_server;

	public String port_server;

    /**
     * Creates new form Client_login
     */
    public Client_Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Panel_Connexion = new javax.swing.JPanel();
        Input_Image = new javax.swing.JLabel();
        Input_Titre = new javax.swing.JLabel();
        Input_Utilisateur = new javax.swing.JTextField();
        Label_Utilisateur = new javax.swing.JLabel();
        Input_Server = new javax.swing.JTextField();
        Label_Server = new javax.swing.JLabel();
        Input_port = new javax.swing.JTextField();
        Label_port = new javax.swing.JLabel();
        Bouton_connexion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Se connecter");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0,33,61));

        Panel_Connexion.setBackground(new java.awt.Color(0, 33, 61));
        

        Input_Image.setIcon(new javax.swing.ImageIcon("image.jpg")); // NOI18N

        Input_Titre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Input_Titre.setForeground(new java.awt.Color(255, 255, 255));
        Input_Titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Input_Titre.setText("Bienvenue");

        Input_Utilisateur.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Input_Utilisateur.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Input_Utilisateur.setToolTipText("");
        Input_Utilisateur.setActionCommand("<Not Set>");
        Input_Utilisateur.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Input_Utilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Input_UtilisateurActionPerformed(evt);
            }
        });

        Label_Utilisateur.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Label_Utilisateur.setForeground(new java.awt.Color(255, 255, 255));
        Label_Utilisateur.setText("Nom d'utilisateur");

        Input_Server.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Input_Server.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Input_Server.setToolTipText("");
        Input_Server.setText("localhost");
        Input_Server.setActionCommand("<Not Set>");
        Input_Server.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Input_Server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Input_ServerActionPerformed(evt);
            }
        });

        Label_Server.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Label_Server.setForeground(new java.awt.Color(255, 255, 255));
        Label_Server.setText("IP du serveur");
        ImageIcon img = new ImageIcon("/Users/user/eclipse-workspace/Projet Chat/logo.jpg");
        setIconImage(img.getImage()); 
        Input_port.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Input_port.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Input_port.setToolTipText("");
        Input_port.setText("5555");
        Input_port.setActionCommand("<Not Set>");
        Input_port.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Input_port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Input_portActionPerformed(evt);
            }
        });

        Label_port.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Label_port.setForeground(new java.awt.Color(255, 255, 255));
        Label_port.setText("Port");

        Bouton_connexion.setText("Connexion");
        Bouton_connexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_connexionActionPerformed(evt);
            }
        });
        
        this.darkmode = new JCheckBox("Dark mode");
        this.darkmode.setForeground(Color.WHITE);

        javax.swing.GroupLayout Panel_ConnexionLayout = new javax.swing.GroupLayout(Panel_Connexion);
        Panel_ConnexionLayout.setHorizontalGroup(
        	Panel_ConnexionLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Panel_ConnexionLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(Panel_ConnexionLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(Panel_ConnexionLayout.createSequentialGroup()
        					.addGroup(Panel_ConnexionLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(Input_Server, 383, 383, 383)
        						.addComponent(Input_Titre, GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        						.addComponent(Input_Utilisateur, 383, 383, 383)
        						.addComponent(Input_port, 383, 383, 383)
        						.addGroup(Panel_ConnexionLayout.createSequentialGroup()
        							.addGroup(Panel_ConnexionLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(Label_port)
        								.addComponent(Label_Server)
        								.addComponent(Label_Utilisateur))
        							.addGap(0, 266, Short.MAX_VALUE))
        						.addComponent(Bouton_connexion, GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE))
        					.addGap(20)
        					.addComponent(Input_Image)
        					.addGap(0, 0, Short.MAX_VALUE))
        				.addGroup(Panel_ConnexionLayout.createSequentialGroup()
        					.addComponent(this.darkmode)
        					.addContainerGap(275, Short.MAX_VALUE))))
        );
        Panel_ConnexionLayout.setVerticalGroup(
        	Panel_ConnexionLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Panel_ConnexionLayout.createSequentialGroup()
        			.addGroup(Panel_ConnexionLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(Input_Image)
        				.addGroup(Panel_ConnexionLayout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(Input_Titre, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(Label_Utilisateur)
        					.addGap(13)
        					.addComponent(Input_Utilisateur, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(Label_Server)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(Input_Server, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(Label_port)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(Input_port, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
        					.addGap(5)
        					.addComponent(this.darkmode)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(Bouton_connexion, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_Connexion.setLayout(Panel_ConnexionLayout);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(Panel_Connexion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Connexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void Input_UtilisateurActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void Input_ServerActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void Input_portActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void Bouton_connexionActionPerformed(java.awt.event.ActionEvent evt) {        
    	this.nom = this.Input_Utilisateur.getText();
    	this.ip_server = this.Input_Server.getText();
    	this.port_server = this.Input_port.getText();
    	
    	essai: try{
    		Socket client;
    		
    		if (this.nom.length()!=0) 
        		{
        			

        			client = new Socket(this.Input_Server.getText(), Integer.valueOf(this.port_server));
        			this.dispose();
        			Client_Chat.start_gui_chat(client, nom, this.darkmode.isSelected());;
        			PrintWriter out = new PrintWriter( client.getOutputStream(), true);    			
    				out.println("Serveur : "+ nom );
    				out.println("Serveur : "+nom+" s'est connecté" );

        		}
        		else {

        			client = new Socket(this.Input_Server.getText(), Integer.valueOf(this.port_server));
        			this.dispose();
        			Client_Chat.start_gui_chat(client, "anonyme", this.darkmode.isSelected());;
        			PrintWriter out = new PrintWriter( client.getOutputStream(), true);    			
    				out.println("Serveur : "+ "anonyme" );
    				out.println("Serveur : Anonyme s'est connecté" );
    			}
    			
			
			

			
		}
    	
		
		catch(UnknownHostException e){

			
			Frame erreur = new JFrame();
			erreur.setLayout(new FlowLayout());
			erreur.setTitle("Hote inconnu");
			erreur.setSize(400,100);
	        Label errormsg=new Label("L'hôte mentionné n'est pas valide, veuillez le modifiez.",Label.CENTER);
	        Button 
	        b3=new Button("Ok");
	        b3.addActionListener(a -> {
	        	
	        	erreur.dispose();
	        });
	        erreur.add(errormsg);
	        erreur.add(b3);
			erreur.setVisible(true);
			System.out.println("ok");
		}
		catch(IOException ioe)
    	{
			Frame erreur = new JFrame();
			erreur.setLayout(new FlowLayout());
			erreur.setTitle("Hote inconnu");
			erreur.setSize(400,100);
	        Label errormsg=new Label("L'hôte mentionné n'est pas valide, veuillez le modifiez.",Label.CENTER);
	        Button 
	        b3=new Button("Ok");
	        b3.addActionListener(a -> {
	        	
	        	erreur.dispose();
	        });
	        erreur.add(errormsg);
	        erreur.add(b3);
			erreur.setVisible(true);
			System.out.println("ok");
    	}



        // TODO add your handling code here:
    }                                                

                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client_Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify        
    public JCheckBox darkmode;

    public javax.swing.JButton Bouton_connexion;
    public javax.swing.JLabel Input_Image;
    public javax.swing.JTextField Input_Server;
    public javax.swing.JLabel Input_Titre;
    public javax.swing.JTextField Input_Utilisateur;
    public javax.swing.JTextField Input_port;
    public javax.swing.JLabel Label_Server;
    public javax.swing.JLabel Label_Utilisateur;
    public javax.swing.JLabel Label_port;
    public javax.swing.JPanel Panel_Connexion;
    public javax.swing.JPanel jPanel1;
}
